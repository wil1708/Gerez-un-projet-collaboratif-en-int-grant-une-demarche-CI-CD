name: Combined Maven and Node.js CI

on:
  push:
    branches:
      - main
      - features/*
  pull_request:
    branches:
      - main
      - features/*

jobs:
# Maven CI job
  maven:
    #if: ${{ github.event_name == 'pull_request'}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 
      - name: Set up JDK 1.11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Test with Maven and 
        working-directory: back
        run: mvn -B test
      - name: Generate Jacoco Report
        working-directory: back
        run: mvn jacoco:report
      - name: Upload JaCoCo Coverage Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site
          retension: 1 day
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      # Set up JDK 17 for SonarQube Analysis
      - name: Set up JDK 17 for SonarQube
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      # Run SonarQube Analysis
      - name: Run SonarQube Analysis
        working-directory: back
        env:
          sonarbob: ${{ secrets.sonarbob }} 
        run: mvn sonar:sonar -Dsonar.login=$sonarbob -Dsonar.projectKey=wil1708_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD -Dsonar.organization=wil1708


  # Node.js CI job
  nodejs:
    #if: ${{ github.event_name == 'pull_request'}}
    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        working-directory: front 
        run: npm ci
      - name: Run Tests
        working-directory: front 
        run: npm run test -- --watch=false --code-coverage
      - name: Upload Frontend Test Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jasmine-report
          path: front/coverage
          retension: 1 day
      # Ã‰tape 5 : Analyser le code Angular avec SonarCloud
      - name: SonarCloud Analysis for Front
        working-directory: front
        env:
          SONAR_TOKEN: ${{ secrets.sonarbob }}
        run: |
          npx sonar-scanner \
          -Dsonar.projectKey=wil1708_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD \
          -Dsonar.organization=wil1708 \
          -Dsonar.sources=src \
          -Dsonar.exclusions=**/*.spec.ts \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=$SONAR_TOKEN

  # Docker job back
  backend_build_and_deploy:
    needs: maven
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build Backend
        working-directory: back
        run: mvn clean package -DskipTests
      - name: Build Backend Docker Image
        working-directory: back
        run: docker build -t wil1708/bobapp:backend-latest .
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Backend Docker Image
        run: docker push wil1708/bobapp:backend-latest
        
  # Docker job front
  frontend_build_and_deploy:
    needs: nodejs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Dependencies and Build Frontend
        working-directory: front
        run: |
          npm ci
          npm run build
      - name: Build Frontend Docker Image
        working-directory: front
        run: docker build -t wil1708/bobapp:frontend-latest .
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Frontend Docker Image
        run: docker push wil1708/bobapp:frontend-latest
